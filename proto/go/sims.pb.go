// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sims.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ErrorCode int32

const (
	ErrorCode_ERR_UNSPECIFIED        ErrorCode = 0
	ErrorCode_ERR_NOT_FOUND          ErrorCode = 1
	ErrorCode_ERR_ALREADY_EXISTS     ErrorCode = 2
	ErrorCode_ERR_MISSING_USERID     ErrorCode = 3
	ErrorCode_ERR_MISSING_HEADER     ErrorCode = 4
	ErrorCode_ERR_NO_CONSUMER        ErrorCode = 5
	ErrorCode_ERR_MISSING_EVENT      ErrorCode = 6
	ErrorCode_ERR_INVALID_EVENT_TYPE ErrorCode = 7
)

var ErrorCode_name = map[int32]string{
	0: "ERR_UNSPECIFIED",
	1: "ERR_NOT_FOUND",
	2: "ERR_ALREADY_EXISTS",
	3: "ERR_MISSING_USERID",
	4: "ERR_MISSING_HEADER",
	5: "ERR_NO_CONSUMER",
	6: "ERR_MISSING_EVENT",
	7: "ERR_INVALID_EVENT_TYPE",
}

var ErrorCode_value = map[string]int32{
	"ERR_UNSPECIFIED":        0,
	"ERR_NOT_FOUND":          1,
	"ERR_ALREADY_EXISTS":     2,
	"ERR_MISSING_USERID":     3,
	"ERR_MISSING_HEADER":     4,
	"ERR_NO_CONSUMER":        5,
	"ERR_MISSING_EVENT":      6,
	"ERR_INVALID_EVENT_TYPE": 7,
}

func (x ErrorCode) String() string {
	return proto.EnumName(ErrorCode_name, int32(x))
}

func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_baee4f6301954b8c, []int{0}
}

type EventType int32

const (
	EventType_EVT_HEARTBEAT EventType = 0
	EventType_EVT_TEXT      EventType = 1
	EventType_EVT_JSON      EventType = 2
	EventType_EVT_PROTOBUF  EventType = 3
	EventType_EVT_BINARY    EventType = 4
)

var EventType_name = map[int32]string{
	0: "EVT_HEARTBEAT",
	1: "EVT_TEXT",
	2: "EVT_JSON",
	3: "EVT_PROTOBUF",
	4: "EVT_BINARY",
}

var EventType_value = map[string]int32{
	"EVT_HEARTBEAT": 0,
	"EVT_TEXT":      1,
	"EVT_JSON":      2,
	"EVT_PROTOBUF":  3,
	"EVT_BINARY":    4,
}

func (x EventType) String() string {
	return proto.EnumName(EventType_name, int32(x))
}

func (EventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_baee4f6301954b8c, []int{1}
}

type ServerConfig struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerConfig) Reset()         { *m = ServerConfig{} }
func (m *ServerConfig) String() string { return proto.CompactTextString(m) }
func (*ServerConfig) ProtoMessage()    {}
func (*ServerConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_baee4f6301954b8c, []int{0}
}

func (m *ServerConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerConfig.Unmarshal(m, b)
}
func (m *ServerConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerConfig.Marshal(b, m, deterministic)
}
func (m *ServerConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerConfig.Merge(m, src)
}
func (m *ServerConfig) XXX_Size() int {
	return xxx_messageInfo_ServerConfig.Size(m)
}
func (m *ServerConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ServerConfig proto.InternalMessageInfo

type Header struct {
	RequestId            string   `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	UserId               string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DeviceId             string   `protobuf:"bytes,3,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	UserAgent            string   `protobuf:"bytes,4,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Header) Reset()         { *m = Header{} }
func (m *Header) String() string { return proto.CompactTextString(m) }
func (*Header) ProtoMessage()    {}
func (*Header) Descriptor() ([]byte, []int) {
	return fileDescriptor_baee4f6301954b8c, []int{1}
}

func (m *Header) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Header.Unmarshal(m, b)
}
func (m *Header) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Header.Marshal(b, m, deterministic)
}
func (m *Header) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Header.Merge(m, src)
}
func (m *Header) XXX_Size() int {
	return xxx_messageInfo_Header.Size(m)
}
func (m *Header) XXX_DiscardUnknown() {
	xxx_messageInfo_Header.DiscardUnknown(m)
}

var xxx_messageInfo_Header proto.InternalMessageInfo

func (m *Header) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *Header) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Header) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *Header) GetUserAgent() string {
	if m != nil {
		return m.UserAgent
	}
	return ""
}

type Event struct {
	Type                 EventType `protobuf:"varint,1,opt,name=type,proto3,enum=sims.proto.EventType" json:"type,omitempty"`
	Data                 []byte    `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_baee4f6301954b8c, []int{2}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetType() EventType {
	if m != nil {
		return m.Type
	}
	return EventType_EVT_HEARTBEAT
}

func (m *Event) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type Selector struct {
	UserAgent            string   `protobuf:"bytes,1,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Selector) Reset()         { *m = Selector{} }
func (m *Selector) String() string { return proto.CompactTextString(m) }
func (*Selector) ProtoMessage()    {}
func (*Selector) Descriptor() ([]byte, []int) {
	return fileDescriptor_baee4f6301954b8c, []int{3}
}

func (m *Selector) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Selector.Unmarshal(m, b)
}
func (m *Selector) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Selector.Marshal(b, m, deterministic)
}
func (m *Selector) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Selector.Merge(m, src)
}
func (m *Selector) XXX_Size() int {
	return xxx_messageInfo_Selector.Size(m)
}
func (m *Selector) XXX_DiscardUnknown() {
	xxx_messageInfo_Selector.DiscardUnknown(m)
}

var xxx_messageInfo_Selector proto.InternalMessageInfo

func (m *Selector) GetUserAgent() string {
	if m != nil {
		return m.UserAgent
	}
	return ""
}

type EventsRequest struct {
	Header               *Header  `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventsRequest) Reset()         { *m = EventsRequest{} }
func (m *EventsRequest) String() string { return proto.CompactTextString(m) }
func (*EventsRequest) ProtoMessage()    {}
func (*EventsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_baee4f6301954b8c, []int{4}
}

func (m *EventsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventsRequest.Unmarshal(m, b)
}
func (m *EventsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventsRequest.Marshal(b, m, deterministic)
}
func (m *EventsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventsRequest.Merge(m, src)
}
func (m *EventsRequest) XXX_Size() int {
	return xxx_messageInfo_EventsRequest.Size(m)
}
func (m *EventsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EventsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EventsRequest proto.InternalMessageInfo

func (m *EventsRequest) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

type ConnectRequest struct {
	Header               *Header  `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectRequest) Reset()         { *m = ConnectRequest{} }
func (m *ConnectRequest) String() string { return proto.CompactTextString(m) }
func (*ConnectRequest) ProtoMessage()    {}
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_baee4f6301954b8c, []int{5}
}

func (m *ConnectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectRequest.Unmarshal(m, b)
}
func (m *ConnectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectRequest.Marshal(b, m, deterministic)
}
func (m *ConnectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectRequest.Merge(m, src)
}
func (m *ConnectRequest) XXX_Size() int {
	return xxx_messageInfo_ConnectRequest.Size(m)
}
func (m *ConnectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectRequest proto.InternalMessageInfo

func (m *ConnectRequest) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

type ConnectResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectResponse) Reset()         { *m = ConnectResponse{} }
func (m *ConnectResponse) String() string { return proto.CompactTextString(m) }
func (*ConnectResponse) ProtoMessage()    {}
func (*ConnectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_baee4f6301954b8c, []int{6}
}

func (m *ConnectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectResponse.Unmarshal(m, b)
}
func (m *ConnectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectResponse.Marshal(b, m, deterministic)
}
func (m *ConnectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectResponse.Merge(m, src)
}
func (m *ConnectResponse) XXX_Size() int {
	return xxx_messageInfo_ConnectResponse.Size(m)
}
func (m *ConnectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectResponse proto.InternalMessageInfo

type DisconnectRequest struct {
	Header               *Header  `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisconnectRequest) Reset()         { *m = DisconnectRequest{} }
func (m *DisconnectRequest) String() string { return proto.CompactTextString(m) }
func (*DisconnectRequest) ProtoMessage()    {}
func (*DisconnectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_baee4f6301954b8c, []int{7}
}

func (m *DisconnectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisconnectRequest.Unmarshal(m, b)
}
func (m *DisconnectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisconnectRequest.Marshal(b, m, deterministic)
}
func (m *DisconnectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisconnectRequest.Merge(m, src)
}
func (m *DisconnectRequest) XXX_Size() int {
	return xxx_messageInfo_DisconnectRequest.Size(m)
}
func (m *DisconnectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DisconnectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DisconnectRequest proto.InternalMessageInfo

func (m *DisconnectRequest) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

type DisconnectResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisconnectResponse) Reset()         { *m = DisconnectResponse{} }
func (m *DisconnectResponse) String() string { return proto.CompactTextString(m) }
func (*DisconnectResponse) ProtoMessage()    {}
func (*DisconnectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_baee4f6301954b8c, []int{8}
}

func (m *DisconnectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisconnectResponse.Unmarshal(m, b)
}
func (m *DisconnectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisconnectResponse.Marshal(b, m, deterministic)
}
func (m *DisconnectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisconnectResponse.Merge(m, src)
}
func (m *DisconnectResponse) XXX_Size() int {
	return xxx_messageInfo_DisconnectResponse.Size(m)
}
func (m *DisconnectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DisconnectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DisconnectResponse proto.InternalMessageInfo

type UnicastRequest struct {
	UserId               string    `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Event                *Event    `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	UserSelector         *Selector `protobuf:"bytes,3,opt,name=user_selector,json=userSelector,proto3" json:"user_selector,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *UnicastRequest) Reset()         { *m = UnicastRequest{} }
func (m *UnicastRequest) String() string { return proto.CompactTextString(m) }
func (*UnicastRequest) ProtoMessage()    {}
func (*UnicastRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_baee4f6301954b8c, []int{9}
}

func (m *UnicastRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnicastRequest.Unmarshal(m, b)
}
func (m *UnicastRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnicastRequest.Marshal(b, m, deterministic)
}
func (m *UnicastRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnicastRequest.Merge(m, src)
}
func (m *UnicastRequest) XXX_Size() int {
	return xxx_messageInfo_UnicastRequest.Size(m)
}
func (m *UnicastRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnicastRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnicastRequest proto.InternalMessageInfo

func (m *UnicastRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *UnicastRequest) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *UnicastRequest) GetUserSelector() *Selector {
	if m != nil {
		return m.UserSelector
	}
	return nil
}

type UnicastResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnicastResponse) Reset()         { *m = UnicastResponse{} }
func (m *UnicastResponse) String() string { return proto.CompactTextString(m) }
func (*UnicastResponse) ProtoMessage()    {}
func (*UnicastResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_baee4f6301954b8c, []int{10}
}

func (m *UnicastResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnicastResponse.Unmarshal(m, b)
}
func (m *UnicastResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnicastResponse.Marshal(b, m, deterministic)
}
func (m *UnicastResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnicastResponse.Merge(m, src)
}
func (m *UnicastResponse) XXX_Size() int {
	return xxx_messageInfo_UnicastResponse.Size(m)
}
func (m *UnicastResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UnicastResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UnicastResponse proto.InternalMessageInfo

type MulticastRequest struct {
	UserId               []string             `protobuf:"bytes,1,rep,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Event                *Event               `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	UserSelector         map[string]*Selector `protobuf:"bytes,3,rep,name=user_selector,json=userSelector,proto3" json:"user_selector,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *MulticastRequest) Reset()         { *m = MulticastRequest{} }
func (m *MulticastRequest) String() string { return proto.CompactTextString(m) }
func (*MulticastRequest) ProtoMessage()    {}
func (*MulticastRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_baee4f6301954b8c, []int{11}
}

func (m *MulticastRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MulticastRequest.Unmarshal(m, b)
}
func (m *MulticastRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MulticastRequest.Marshal(b, m, deterministic)
}
func (m *MulticastRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MulticastRequest.Merge(m, src)
}
func (m *MulticastRequest) XXX_Size() int {
	return xxx_messageInfo_MulticastRequest.Size(m)
}
func (m *MulticastRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MulticastRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MulticastRequest proto.InternalMessageInfo

func (m *MulticastRequest) GetUserId() []string {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *MulticastRequest) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *MulticastRequest) GetUserSelector() map[string]*Selector {
	if m != nil {
		return m.UserSelector
	}
	return nil
}

type MulticastResponse struct {
	UserErrcode          map[string]ErrorCode `protobuf:"bytes,1,rep,name=user_errcode,json=userErrcode,proto3" json:"user_errcode,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=sims.proto.ErrorCode"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *MulticastResponse) Reset()         { *m = MulticastResponse{} }
func (m *MulticastResponse) String() string { return proto.CompactTextString(m) }
func (*MulticastResponse) ProtoMessage()    {}
func (*MulticastResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_baee4f6301954b8c, []int{12}
}

func (m *MulticastResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MulticastResponse.Unmarshal(m, b)
}
func (m *MulticastResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MulticastResponse.Marshal(b, m, deterministic)
}
func (m *MulticastResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MulticastResponse.Merge(m, src)
}
func (m *MulticastResponse) XXX_Size() int {
	return xxx_messageInfo_MulticastResponse.Size(m)
}
func (m *MulticastResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MulticastResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MulticastResponse proto.InternalMessageInfo

func (m *MulticastResponse) GetUserErrcode() map[string]ErrorCode {
	if m != nil {
		return m.UserErrcode
	}
	return nil
}

type HeartbeatRequest struct {
	Header               *Header  `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HeartbeatRequest) Reset()         { *m = HeartbeatRequest{} }
func (m *HeartbeatRequest) String() string { return proto.CompactTextString(m) }
func (*HeartbeatRequest) ProtoMessage()    {}
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_baee4f6301954b8c, []int{13}
}

func (m *HeartbeatRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeartbeatRequest.Unmarshal(m, b)
}
func (m *HeartbeatRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeartbeatRequest.Marshal(b, m, deterministic)
}
func (m *HeartbeatRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeartbeatRequest.Merge(m, src)
}
func (m *HeartbeatRequest) XXX_Size() int {
	return xxx_messageInfo_HeartbeatRequest.Size(m)
}
func (m *HeartbeatRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HeartbeatRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HeartbeatRequest proto.InternalMessageInfo

func (m *HeartbeatRequest) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

type HeartbeatResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HeartbeatResponse) Reset()         { *m = HeartbeatResponse{} }
func (m *HeartbeatResponse) String() string { return proto.CompactTextString(m) }
func (*HeartbeatResponse) ProtoMessage()    {}
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_baee4f6301954b8c, []int{14}
}

func (m *HeartbeatResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeartbeatResponse.Unmarshal(m, b)
}
func (m *HeartbeatResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeartbeatResponse.Marshal(b, m, deterministic)
}
func (m *HeartbeatResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeartbeatResponse.Merge(m, src)
}
func (m *HeartbeatResponse) XXX_Size() int {
	return xxx_messageInfo_HeartbeatResponse.Size(m)
}
func (m *HeartbeatResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HeartbeatResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HeartbeatResponse proto.InternalMessageInfo

type ListRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRequest) Reset()         { *m = ListRequest{} }
func (m *ListRequest) String() string { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()    {}
func (*ListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_baee4f6301954b8c, []int{15}
}

func (m *ListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRequest.Unmarshal(m, b)
}
func (m *ListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRequest.Marshal(b, m, deterministic)
}
func (m *ListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRequest.Merge(m, src)
}
func (m *ListRequest) XXX_Size() int {
	return xxx_messageInfo_ListRequest.Size(m)
}
func (m *ListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRequest proto.InternalMessageInfo

type Channel struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DeviceId             string   `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Birth                string   `protobuf:"bytes,3,opt,name=birth,proto3" json:"birth,omitempty"`
	LastHeartbeat        string   `protobuf:"bytes,4,opt,name=last_heartbeat,json=lastHeartbeat,proto3" json:"last_heartbeat,omitempty"`
	Active               int32    `protobuf:"varint,5,opt,name=active,proto3" json:"active,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Channel) Reset()         { *m = Channel{} }
func (m *Channel) String() string { return proto.CompactTextString(m) }
func (*Channel) ProtoMessage()    {}
func (*Channel) Descriptor() ([]byte, []int) {
	return fileDescriptor_baee4f6301954b8c, []int{16}
}

func (m *Channel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Channel.Unmarshal(m, b)
}
func (m *Channel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Channel.Marshal(b, m, deterministic)
}
func (m *Channel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Channel.Merge(m, src)
}
func (m *Channel) XXX_Size() int {
	return xxx_messageInfo_Channel.Size(m)
}
func (m *Channel) XXX_DiscardUnknown() {
	xxx_messageInfo_Channel.DiscardUnknown(m)
}

var xxx_messageInfo_Channel proto.InternalMessageInfo

func (m *Channel) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Channel) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *Channel) GetBirth() string {
	if m != nil {
		return m.Birth
	}
	return ""
}

func (m *Channel) GetLastHeartbeat() string {
	if m != nil {
		return m.LastHeartbeat
	}
	return ""
}

func (m *Channel) GetActive() int32 {
	if m != nil {
		return m.Active
	}
	return 0
}

type ListResponse struct {
	Channels             []*Channel `protobuf:"bytes,1,rep,name=channels,proto3" json:"channels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListResponse) Reset()         { *m = ListResponse{} }
func (m *ListResponse) String() string { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()    {}
func (*ListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_baee4f6301954b8c, []int{17}
}

func (m *ListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListResponse.Unmarshal(m, b)
}
func (m *ListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListResponse.Marshal(b, m, deterministic)
}
func (m *ListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResponse.Merge(m, src)
}
func (m *ListResponse) XXX_Size() int {
	return xxx_messageInfo_ListResponse.Size(m)
}
func (m *ListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListResponse proto.InternalMessageInfo

func (m *ListResponse) GetChannels() []*Channel {
	if m != nil {
		return m.Channels
	}
	return nil
}

func init() {
	proto.RegisterEnum("sims.proto.ErrorCode", ErrorCode_name, ErrorCode_value)
	proto.RegisterEnum("sims.proto.EventType", EventType_name, EventType_value)
	proto.RegisterType((*ServerConfig)(nil), "sims.proto.ServerConfig")
	proto.RegisterType((*Header)(nil), "sims.proto.Header")
	proto.RegisterType((*Event)(nil), "sims.proto.Event")
	proto.RegisterType((*Selector)(nil), "sims.proto.Selector")
	proto.RegisterType((*EventsRequest)(nil), "sims.proto.EventsRequest")
	proto.RegisterType((*ConnectRequest)(nil), "sims.proto.ConnectRequest")
	proto.RegisterType((*ConnectResponse)(nil), "sims.proto.ConnectResponse")
	proto.RegisterType((*DisconnectRequest)(nil), "sims.proto.DisconnectRequest")
	proto.RegisterType((*DisconnectResponse)(nil), "sims.proto.DisconnectResponse")
	proto.RegisterType((*UnicastRequest)(nil), "sims.proto.UnicastRequest")
	proto.RegisterType((*UnicastResponse)(nil), "sims.proto.UnicastResponse")
	proto.RegisterType((*MulticastRequest)(nil), "sims.proto.MulticastRequest")
	proto.RegisterMapType((map[string]*Selector)(nil), "sims.proto.MulticastRequest.UserSelectorEntry")
	proto.RegisterType((*MulticastResponse)(nil), "sims.proto.MulticastResponse")
	proto.RegisterMapType((map[string]ErrorCode)(nil), "sims.proto.MulticastResponse.UserErrcodeEntry")
	proto.RegisterType((*HeartbeatRequest)(nil), "sims.proto.HeartbeatRequest")
	proto.RegisterType((*HeartbeatResponse)(nil), "sims.proto.HeartbeatResponse")
	proto.RegisterType((*ListRequest)(nil), "sims.proto.ListRequest")
	proto.RegisterType((*Channel)(nil), "sims.proto.Channel")
	proto.RegisterType((*ListResponse)(nil), "sims.proto.ListResponse")
}

func init() { proto.RegisterFile("sims.proto", fileDescriptor_baee4f6301954b8c) }

var fileDescriptor_baee4f6301954b8c = []byte{
	// 933 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x55, 0x5b, 0x6f, 0xe3, 0x44,
	0x14, 0x5e, 0xe7, 0xd6, 0xe4, 0xe4, 0xb2, 0x93, 0x69, 0xb7, 0x5b, 0xb2, 0x17, 0xad, 0x22, 0x21,
	0xba, 0x45, 0x4a, 0x51, 0x78, 0xd9, 0x05, 0xc4, 0x2a, 0x17, 0x97, 0x18, 0x5a, 0xa7, 0x8c, 0x9d,
	0x6a, 0x8b, 0x90, 0x22, 0xc7, 0x1e, 0x1a, 0x8b, 0xd4, 0x0e, 0x63, 0x27, 0x52, 0x25, 0x1e, 0xf8,
	0x03, 0xbc, 0xf1, 0x82, 0xf8, 0x2d, 0x3c, 0xf1, 0xc7, 0xd0, 0x8c, 0x27, 0xae, 0xed, 0x34, 0x2f,
	0x7d, 0x8a, 0xe7, 0x5c, 0xbf, 0xf9, 0xce, 0xc9, 0x37, 0x00, 0x81, 0x7b, 0x1b, 0x74, 0x96, 0xcc,
	0x0f, 0x7d, 0x9c, 0xf8, 0x6e, 0x37, 0xa0, 0x66, 0x50, 0xb6, 0xa6, 0x6c, 0xe0, 0x7b, 0xbf, 0xb8,
	0x37, 0xed, 0xdf, 0xa1, 0x34, 0xa2, 0x96, 0x43, 0x19, 0x7e, 0x05, 0xc0, 0xe8, 0x6f, 0x2b, 0x1a,
	0x84, 0x53, 0xd7, 0x39, 0x52, 0xde, 0x28, 0xc7, 0x15, 0x52, 0x91, 0x16, 0xcd, 0xc1, 0xcf, 0x61,
	0x6f, 0x15, 0x50, 0xc6, 0x7d, 0x39, 0xe1, 0x2b, 0xf1, 0xa3, 0xe6, 0xe0, 0x17, 0x50, 0x71, 0xe8,
	0xda, 0xb5, 0x29, 0x77, 0xe5, 0x85, 0xab, 0x1c, 0x19, 0x34, 0x87, 0x17, 0x15, 0x59, 0xd6, 0x0d,
	0xf5, 0xc2, 0xa3, 0x42, 0x54, 0x94, 0x5b, 0x7a, 0xdc, 0xd0, 0x3e, 0x83, 0xa2, 0xba, 0xa6, 0x5e,
	0x88, 0xdf, 0x42, 0x21, 0xbc, 0x5b, 0x52, 0xd1, 0xb6, 0xd1, 0x7d, 0xd6, 0xb9, 0x47, 0xdc, 0x11,
	0x01, 0xe6, 0xdd, 0x92, 0x12, 0x11, 0x82, 0x31, 0x14, 0x1c, 0x2b, 0xb4, 0x04, 0x8a, 0x1a, 0x11,
	0xdf, 0xed, 0xb7, 0x50, 0x36, 0xe8, 0x82, 0xda, 0xa1, 0xcf, 0x32, 0x2d, 0x95, 0x6c, 0xcb, 0xaf,
	0xa1, 0x2e, 0x2a, 0x06, 0x24, 0xba, 0x1a, 0x3e, 0x81, 0xd2, 0x5c, 0x30, 0x20, 0x62, 0xab, 0x5d,
	0x9c, 0x6c, 0x1e, 0x71, 0x43, 0x64, 0x44, 0xfb, 0x1b, 0x68, 0x0c, 0x7c, 0xcf, 0xa3, 0x76, 0xf8,
	0x98, 0xec, 0x26, 0x3c, 0x8d, 0xb3, 0x83, 0xa5, 0xef, 0x05, 0xb4, 0xfd, 0x01, 0x9a, 0x43, 0x37,
	0xb0, 0x1f, 0x5f, 0xf3, 0x00, 0x70, 0xb2, 0x80, 0x2c, 0xfb, 0xa7, 0x02, 0x8d, 0x89, 0xe7, 0xda,
	0x56, 0x10, 0x17, 0x4d, 0xcc, 0x4f, 0x49, 0xcd, 0xef, 0x33, 0x28, 0x52, 0x4e, 0x88, 0x20, 0xb4,
	0xda, 0x6d, 0x6e, 0x71, 0x4f, 0x22, 0x3f, 0x7e, 0x0f, 0x75, 0x51, 0x21, 0x90, 0x4c, 0x8b, 0x61,
	0x57, 0xbb, 0x07, 0xc9, 0x84, 0xcd, 0x14, 0x48, 0x8d, 0x87, 0x6e, 0x4e, 0xfc, 0xe6, 0x31, 0x1c,
	0x09, 0xf1, 0x8f, 0x1c, 0xa0, 0x8b, 0xd5, 0x22, 0xdc, 0x0d, 0x32, 0xff, 0x18, 0x90, 0xc6, 0x36,
	0xc8, 0xfc, 0x71, 0xb5, 0xdb, 0x49, 0x26, 0x64, 0xdb, 0x76, 0x26, 0x09, 0xac, 0xaa, 0x17, 0xb2,
	0xbb, 0x34, 0xfc, 0xd6, 0x04, 0x9a, 0x5b, 0x21, 0x18, 0x41, 0xfe, 0x57, 0x7a, 0x27, 0xc9, 0xe4,
	0x9f, 0xf8, 0x04, 0x8a, 0x6b, 0x6b, 0xb1, 0xa2, 0x12, 0xe4, 0xc3, 0xc4, 0x44, 0x21, 0x5f, 0xe5,
	0xde, 0x29, 0xed, 0x7f, 0x15, 0x68, 0x26, 0xb0, 0x44, 0xc4, 0xe0, 0x1f, 0x41, 0x34, 0x9f, 0x52,
	0xc6, 0x6c, 0xdf, 0xa1, 0x82, 0x88, 0xdd, 0x17, 0x88, 0x92, 0xc4, 0x0d, 0xd4, 0x28, 0x21, 0xba,
	0x40, 0x75, 0x75, 0x6f, 0x69, 0x4d, 0x00, 0x65, 0x03, 0x1e, 0x80, 0xff, 0x79, 0x12, 0x7e, 0xf6,
	0x4f, 0xc8, 0x98, 0xcf, 0x06, 0xbe, 0x43, 0x93, 0xf8, 0xbf, 0x05, 0x34, 0xa2, 0x16, 0x0b, 0x67,
	0xd4, 0x7a, 0xd4, 0xee, 0xee, 0x43, 0x33, 0x91, 0x2f, 0xf7, 0xa2, 0x0e, 0xd5, 0x73, 0x37, 0x1e,
	0x4d, 0xfb, 0x2f, 0x05, 0xf6, 0x06, 0x73, 0xcb, 0xf3, 0xe8, 0x62, 0xf7, 0x0a, 0xa7, 0x24, 0x28,
	0x97, 0x91, 0xa0, 0x03, 0x28, 0xce, 0x5c, 0x16, 0xce, 0xa5, 0x36, 0x45, 0x07, 0xfc, 0x29, 0x34,
	0x16, 0x56, 0x10, 0x4e, 0xe7, 0x1b, 0x00, 0x52, 0x9c, 0xea, 0xdc, 0x1a, 0xa3, 0xc2, 0x87, 0x50,
	0xb2, 0xec, 0xd0, 0x5d, 0xd3, 0xa3, 0xe2, 0x1b, 0xe5, 0xb8, 0x48, 0xe4, 0xa9, 0xfd, 0x01, 0x6a,
	0x11, 0x4a, 0x39, 0xb4, 0x53, 0x28, 0xdb, 0x11, 0xca, 0x40, 0x0e, 0x6c, 0x3f, 0x79, 0x71, 0x79,
	0x03, 0x12, 0x07, 0x9d, 0xfc, 0xa7, 0x40, 0x25, 0x26, 0x15, 0xef, 0xc3, 0x53, 0x95, 0x90, 0xe9,
	0x44, 0x37, 0x2e, 0xd5, 0x81, 0x76, 0xa6, 0xa9, 0x43, 0xf4, 0x04, 0x37, 0xa1, 0xce, 0x8d, 0xfa,
	0xd8, 0x9c, 0x9e, 0x8d, 0x27, 0xfa, 0x10, 0x29, 0xf8, 0x10, 0x30, 0x37, 0xf5, 0xce, 0x89, 0xda,
	0x1b, 0x5e, 0x4f, 0xd5, 0x8f, 0x9a, 0x61, 0x1a, 0x28, 0xb7, 0xb1, 0x5f, 0x68, 0x86, 0xa1, 0xe9,
	0xdf, 0x4d, 0x27, 0x86, 0x4a, 0xb4, 0x21, 0xca, 0x67, 0xed, 0x23, 0xb5, 0x37, 0x54, 0x09, 0x2a,
	0x6c, 0xfa, 0xe9, 0xe3, 0xe9, 0x60, 0xac, 0x1b, 0x93, 0x0b, 0x95, 0xa0, 0x22, 0x7e, 0x06, 0xcd,
	0x64, 0xb0, 0x7a, 0xa5, 0xea, 0x26, 0x2a, 0xe1, 0x16, 0x1c, 0x72, 0xb3, 0xa6, 0x5f, 0xf5, 0xce,
	0xb5, 0x61, 0x64, 0x9e, 0x9a, 0xd7, 0x97, 0x2a, 0xda, 0x3b, 0xf9, 0x19, 0x2a, 0xb1, 0x3c, 0x0b,
	0xbc, 0x57, 0x26, 0x6f, 0x42, 0xcc, 0xbe, 0xda, 0x33, 0xd1, 0x13, 0x5c, 0x83, 0x32, 0x37, 0x99,
	0xea, 0x47, 0x13, 0x29, 0x9b, 0xd3, 0xf7, 0xc6, 0x58, 0x47, 0x39, 0x8c, 0xa0, 0xc6, 0x4f, 0x97,
	0x64, 0x6c, 0x8e, 0xfb, 0x93, 0x33, 0x94, 0xc7, 0x0d, 0x00, 0x6e, 0xe9, 0x6b, 0x7a, 0x8f, 0x5c,
	0xa3, 0x42, 0xf7, 0x9f, 0x1c, 0xe4, 0x47, 0xab, 0x19, 0xee, 0xc3, 0x9e, 0xd4, 0x4d, 0xdc, 0x4a,
	0xb1, 0x9a, 0x92, 0xcd, 0xd6, 0x8b, 0x07, 0x7d, 0x72, 0x40, 0x23, 0xa8, 0xdc, 0x4f, 0xf5, 0x65,
	0x66, 0x29, 0x53, 0x2b, 0xdc, 0x7a, 0xb5, 0xc3, 0x2b, 0x2b, 0xfd, 0x00, 0x70, 0xaf, 0xb8, 0x38,
	0x15, 0xbc, 0x25, 0xe5, 0xad, 0xd7, 0xbb, 0xdc, 0xb2, 0xd8, 0x7b, 0x28, 0xf0, 0x3d, 0xc2, 0xcf,
	0x93, 0x71, 0x89, 0xfd, 0x6f, 0x1d, 0x6d, 0x3b, 0xa2, 0xd4, 0xee, 0x10, 0xca, 0x46, 0xc8, 0xa8,
	0x75, 0x4b, 0x19, 0x7e, 0x07, 0xa5, 0xe8, 0x51, 0xc3, 0x9f, 0x6c, 0x29, 0xe3, 0xe6, 0xa1, 0x6b,
	0x6d, 0x8b, 0xe6, 0x17, 0x4a, 0xf7, 0x6f, 0x05, 0x2a, 0x97, 0xab, 0xd9, 0xc2, 0x0d, 0xe6, 0x94,
	0x71, 0xa6, 0xa5, 0x4e, 0xa7, 0x99, 0x4e, 0xbf, 0x25, 0x69, 0xa6, 0x33, 0xc2, 0xce, 0x99, 0x8e,
	0xf5, 0x29, 0xcd, 0x74, 0x56, 0x77, 0xd3, 0x4c, 0x6f, 0x89, 0x5a, 0xff, 0xf5, 0x4f, 0x2f, 0x6f,
	0xdc, 0x70, 0xbe, 0x9a, 0x75, 0x6c, 0xff, 0xf6, 0xd4, 0xb2, 0x17, 0x6e, 0xb0, 0x3c, 0xe5, 0x19,
	0xa7, 0x22, 0x63, 0x56, 0x12, 0x3f, 0x5f, 0xfe, 0x1f, 0x00, 0x00, 0xff, 0xff, 0x47, 0xbd, 0x69,
	0x2f, 0xec, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HubClient is the client API for Hub service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HubClient interface {
	Connect(ctx context.Context, in *ConnectRequest, opts ...grpc.CallOption) (*ConnectResponse, error)
	Heartbeat(ctx context.Context, in *HeartbeatRequest, opts ...grpc.CallOption) (*HeartbeatResponse, error)
	Disconnect(ctx context.Context, in *DisconnectRequest, opts ...grpc.CallOption) (*DisconnectResponse, error)
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error)
}

type hubClient struct {
	cc *grpc.ClientConn
}

func NewHubClient(cc *grpc.ClientConn) HubClient {
	return &hubClient{cc}
}

func (c *hubClient) Connect(ctx context.Context, in *ConnectRequest, opts ...grpc.CallOption) (*ConnectResponse, error) {
	out := new(ConnectResponse)
	err := c.cc.Invoke(ctx, "/sims.proto.Hub/Connect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hubClient) Heartbeat(ctx context.Context, in *HeartbeatRequest, opts ...grpc.CallOption) (*HeartbeatResponse, error) {
	out := new(HeartbeatResponse)
	err := c.cc.Invoke(ctx, "/sims.proto.Hub/Heartbeat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hubClient) Disconnect(ctx context.Context, in *DisconnectRequest, opts ...grpc.CallOption) (*DisconnectResponse, error) {
	out := new(DisconnectResponse)
	err := c.cc.Invoke(ctx, "/sims.proto.Hub/Disconnect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hubClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := c.cc.Invoke(ctx, "/sims.proto.Hub/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HubServer is the server API for Hub service.
type HubServer interface {
	Connect(context.Context, *ConnectRequest) (*ConnectResponse, error)
	Heartbeat(context.Context, *HeartbeatRequest) (*HeartbeatResponse, error)
	Disconnect(context.Context, *DisconnectRequest) (*DisconnectResponse, error)
	List(context.Context, *ListRequest) (*ListResponse, error)
}

// UnimplementedHubServer can be embedded to have forward compatible implementations.
type UnimplementedHubServer struct {
}

func (*UnimplementedHubServer) Connect(ctx context.Context, req *ConnectRequest) (*ConnectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Connect not implemented")
}
func (*UnimplementedHubServer) Heartbeat(ctx context.Context, req *HeartbeatRequest) (*HeartbeatResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Heartbeat not implemented")
}
func (*UnimplementedHubServer) Disconnect(ctx context.Context, req *DisconnectRequest) (*DisconnectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Disconnect not implemented")
}
func (*UnimplementedHubServer) List(ctx context.Context, req *ListRequest) (*ListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}

func RegisterHubServer(s *grpc.Server, srv HubServer) {
	s.RegisterService(&_Hub_serviceDesc, srv)
}

func _Hub_Connect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HubServer).Connect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sims.proto.Hub/Connect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HubServer).Connect(ctx, req.(*ConnectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hub_Heartbeat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HeartbeatRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HubServer).Heartbeat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sims.proto.Hub/Heartbeat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HubServer).Heartbeat(ctx, req.(*HeartbeatRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hub_Disconnect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisconnectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HubServer).Disconnect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sims.proto.Hub/Disconnect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HubServer).Disconnect(ctx, req.(*DisconnectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hub_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HubServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sims.proto.Hub/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HubServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Hub_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sims.proto.Hub",
	HandlerType: (*HubServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Connect",
			Handler:    _Hub_Connect_Handler,
		},
		{
			MethodName: "Heartbeat",
			Handler:    _Hub_Heartbeat_Handler,
		},
		{
			MethodName: "Disconnect",
			Handler:    _Hub_Disconnect_Handler,
		},
		{
			MethodName: "List",
			Handler:    _Hub_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sims.proto",
}

// StreamerClient is the client API for Streamer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StreamerClient interface {
	Events(ctx context.Context, in *EventsRequest, opts ...grpc.CallOption) (Streamer_EventsClient, error)
}

type streamerClient struct {
	cc *grpc.ClientConn
}

func NewStreamerClient(cc *grpc.ClientConn) StreamerClient {
	return &streamerClient{cc}
}

func (c *streamerClient) Events(ctx context.Context, in *EventsRequest, opts ...grpc.CallOption) (Streamer_EventsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Streamer_serviceDesc.Streams[0], "/sims.proto.Streamer/Events", opts...)
	if err != nil {
		return nil, err
	}
	x := &streamerEventsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Streamer_EventsClient interface {
	Recv() (*Event, error)
	grpc.ClientStream
}

type streamerEventsClient struct {
	grpc.ClientStream
}

func (x *streamerEventsClient) Recv() (*Event, error) {
	m := new(Event)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// StreamerServer is the server API for Streamer service.
type StreamerServer interface {
	Events(*EventsRequest, Streamer_EventsServer) error
}

// UnimplementedStreamerServer can be embedded to have forward compatible implementations.
type UnimplementedStreamerServer struct {
}

func (*UnimplementedStreamerServer) Events(req *EventsRequest, srv Streamer_EventsServer) error {
	return status.Errorf(codes.Unimplemented, "method Events not implemented")
}

func RegisterStreamerServer(s *grpc.Server, srv StreamerServer) {
	s.RegisterService(&_Streamer_serviceDesc, srv)
}

func _Streamer_Events_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(EventsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(StreamerServer).Events(m, &streamerEventsServer{stream})
}

type Streamer_EventsServer interface {
	Send(*Event) error
	grpc.ServerStream
}

type streamerEventsServer struct {
	grpc.ServerStream
}

func (x *streamerEventsServer) Send(m *Event) error {
	return x.ServerStream.SendMsg(m)
}

var _Streamer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sims.proto.Streamer",
	HandlerType: (*StreamerServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Events",
			Handler:       _Streamer_Events_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "sims.proto",
}

// PublisherClient is the client API for Publisher service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PublisherClient interface {
	Unicast(ctx context.Context, in *UnicastRequest, opts ...grpc.CallOption) (*UnicastResponse, error)
	Multicast(ctx context.Context, in *MulticastRequest, opts ...grpc.CallOption) (*MulticastResponse, error)
}

type publisherClient struct {
	cc *grpc.ClientConn
}

func NewPublisherClient(cc *grpc.ClientConn) PublisherClient {
	return &publisherClient{cc}
}

func (c *publisherClient) Unicast(ctx context.Context, in *UnicastRequest, opts ...grpc.CallOption) (*UnicastResponse, error) {
	out := new(UnicastResponse)
	err := c.cc.Invoke(ctx, "/sims.proto.Publisher/Unicast", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *publisherClient) Multicast(ctx context.Context, in *MulticastRequest, opts ...grpc.CallOption) (*MulticastResponse, error) {
	out := new(MulticastResponse)
	err := c.cc.Invoke(ctx, "/sims.proto.Publisher/Multicast", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PublisherServer is the server API for Publisher service.
type PublisherServer interface {
	Unicast(context.Context, *UnicastRequest) (*UnicastResponse, error)
	Multicast(context.Context, *MulticastRequest) (*MulticastResponse, error)
}

// UnimplementedPublisherServer can be embedded to have forward compatible implementations.
type UnimplementedPublisherServer struct {
}

func (*UnimplementedPublisherServer) Unicast(ctx context.Context, req *UnicastRequest) (*UnicastResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Unicast not implemented")
}
func (*UnimplementedPublisherServer) Multicast(ctx context.Context, req *MulticastRequest) (*MulticastResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Multicast not implemented")
}

func RegisterPublisherServer(s *grpc.Server, srv PublisherServer) {
	s.RegisterService(&_Publisher_serviceDesc, srv)
}

func _Publisher_Unicast_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnicastRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublisherServer).Unicast(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sims.proto.Publisher/Unicast",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublisherServer).Unicast(ctx, req.(*UnicastRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Publisher_Multicast_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MulticastRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublisherServer).Multicast(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sims.proto.Publisher/Multicast",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublisherServer).Multicast(ctx, req.(*MulticastRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Publisher_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sims.proto.Publisher",
	HandlerType: (*PublisherServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Unicast",
			Handler:    _Publisher_Unicast_Handler,
		},
		{
			MethodName: "Multicast",
			Handler:    _Publisher_Multicast_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sims.proto",
}
