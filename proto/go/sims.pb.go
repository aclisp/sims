// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sims.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ErrorCode int32

const (
	ErrorCode_ERR_UNSPECIFIED        ErrorCode = 0
	ErrorCode_ERR_NOT_FOUND          ErrorCode = 1
	ErrorCode_ERR_ALREADY_EXISTS     ErrorCode = 2
	ErrorCode_ERR_MISSING_USERID     ErrorCode = 3
	ErrorCode_ERR_MISSING_HEADER     ErrorCode = 4
	ErrorCode_ERR_NO_CONSUMER        ErrorCode = 5
	ErrorCode_ERR_MISSING_EVENT      ErrorCode = 6
	ErrorCode_ERR_INVALID_EVENT_TYPE ErrorCode = 7
)

var ErrorCode_name = map[int32]string{
	0: "ERR_UNSPECIFIED",
	1: "ERR_NOT_FOUND",
	2: "ERR_ALREADY_EXISTS",
	3: "ERR_MISSING_USERID",
	4: "ERR_MISSING_HEADER",
	5: "ERR_NO_CONSUMER",
	6: "ERR_MISSING_EVENT",
	7: "ERR_INVALID_EVENT_TYPE",
}

var ErrorCode_value = map[string]int32{
	"ERR_UNSPECIFIED":        0,
	"ERR_NOT_FOUND":          1,
	"ERR_ALREADY_EXISTS":     2,
	"ERR_MISSING_USERID":     3,
	"ERR_MISSING_HEADER":     4,
	"ERR_NO_CONSUMER":        5,
	"ERR_MISSING_EVENT":      6,
	"ERR_INVALID_EVENT_TYPE": 7,
}

func (x ErrorCode) String() string {
	return proto.EnumName(ErrorCode_name, int32(x))
}

func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_baee4f6301954b8c, []int{0}
}

type EventType int32

const (
	EventType_EVT_HEARTBEAT EventType = 0
	EventType_EVT_TEXT      EventType = 1
	EventType_EVT_JSON      EventType = 2
	EventType_EVT_PROTOBUF  EventType = 3
	EventType_EVT_BINARY    EventType = 4
)

var EventType_name = map[int32]string{
	0: "EVT_HEARTBEAT",
	1: "EVT_TEXT",
	2: "EVT_JSON",
	3: "EVT_PROTOBUF",
	4: "EVT_BINARY",
}

var EventType_value = map[string]int32{
	"EVT_HEARTBEAT": 0,
	"EVT_TEXT":      1,
	"EVT_JSON":      2,
	"EVT_PROTOBUF":  3,
	"EVT_BINARY":    4,
}

func (x EventType) String() string {
	return proto.EnumName(EventType_name, int32(x))
}

func (EventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_baee4f6301954b8c, []int{1}
}

type ServerConfig struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerConfig) Reset()         { *m = ServerConfig{} }
func (m *ServerConfig) String() string { return proto.CompactTextString(m) }
func (*ServerConfig) ProtoMessage()    {}
func (*ServerConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_baee4f6301954b8c, []int{0}
}

func (m *ServerConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerConfig.Unmarshal(m, b)
}
func (m *ServerConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerConfig.Marshal(b, m, deterministic)
}
func (m *ServerConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerConfig.Merge(m, src)
}
func (m *ServerConfig) XXX_Size() int {
	return xxx_messageInfo_ServerConfig.Size(m)
}
func (m *ServerConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ServerConfig proto.InternalMessageInfo

type User struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_baee4f6301954b8c, []int{1}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

type Header struct {
	RequestId            string   `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	UserId               string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DeviceId             string   `protobuf:"bytes,3,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Groups               []string `protobuf:"bytes,4,rep,name=groups,proto3" json:"groups,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Header) Reset()         { *m = Header{} }
func (m *Header) String() string { return proto.CompactTextString(m) }
func (*Header) ProtoMessage()    {}
func (*Header) Descriptor() ([]byte, []int) {
	return fileDescriptor_baee4f6301954b8c, []int{2}
}

func (m *Header) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Header.Unmarshal(m, b)
}
func (m *Header) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Header.Marshal(b, m, deterministic)
}
func (m *Header) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Header.Merge(m, src)
}
func (m *Header) XXX_Size() int {
	return xxx_messageInfo_Header.Size(m)
}
func (m *Header) XXX_DiscardUnknown() {
	xxx_messageInfo_Header.DiscardUnknown(m)
}

var xxx_messageInfo_Header proto.InternalMessageInfo

func (m *Header) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *Header) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Header) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *Header) GetGroups() []string {
	if m != nil {
		return m.Groups
	}
	return nil
}

type Event struct {
	Type                 EventType `protobuf:"varint,1,opt,name=type,proto3,enum=sims.proto.EventType" json:"type,omitempty"`
	Data                 []byte    `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_baee4f6301954b8c, []int{3}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetType() EventType {
	if m != nil {
		return m.Type
	}
	return EventType_EVT_HEARTBEAT
}

func (m *Event) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type EventsRequest struct {
	Header               *Header  `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventsRequest) Reset()         { *m = EventsRequest{} }
func (m *EventsRequest) String() string { return proto.CompactTextString(m) }
func (*EventsRequest) ProtoMessage()    {}
func (*EventsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_baee4f6301954b8c, []int{4}
}

func (m *EventsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventsRequest.Unmarshal(m, b)
}
func (m *EventsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventsRequest.Marshal(b, m, deterministic)
}
func (m *EventsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventsRequest.Merge(m, src)
}
func (m *EventsRequest) XXX_Size() int {
	return xxx_messageInfo_EventsRequest.Size(m)
}
func (m *EventsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EventsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EventsRequest proto.InternalMessageInfo

func (m *EventsRequest) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

type ConnectRequest struct {
	Header               *Header  `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectRequest) Reset()         { *m = ConnectRequest{} }
func (m *ConnectRequest) String() string { return proto.CompactTextString(m) }
func (*ConnectRequest) ProtoMessage()    {}
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_baee4f6301954b8c, []int{5}
}

func (m *ConnectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectRequest.Unmarshal(m, b)
}
func (m *ConnectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectRequest.Marshal(b, m, deterministic)
}
func (m *ConnectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectRequest.Merge(m, src)
}
func (m *ConnectRequest) XXX_Size() int {
	return xxx_messageInfo_ConnectRequest.Size(m)
}
func (m *ConnectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectRequest proto.InternalMessageInfo

func (m *ConnectRequest) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

type ConnectResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectResponse) Reset()         { *m = ConnectResponse{} }
func (m *ConnectResponse) String() string { return proto.CompactTextString(m) }
func (*ConnectResponse) ProtoMessage()    {}
func (*ConnectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_baee4f6301954b8c, []int{6}
}

func (m *ConnectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectResponse.Unmarshal(m, b)
}
func (m *ConnectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectResponse.Marshal(b, m, deterministic)
}
func (m *ConnectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectResponse.Merge(m, src)
}
func (m *ConnectResponse) XXX_Size() int {
	return xxx_messageInfo_ConnectResponse.Size(m)
}
func (m *ConnectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectResponse proto.InternalMessageInfo

type DisconnectRequest struct {
	Header               *Header  `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisconnectRequest) Reset()         { *m = DisconnectRequest{} }
func (m *DisconnectRequest) String() string { return proto.CompactTextString(m) }
func (*DisconnectRequest) ProtoMessage()    {}
func (*DisconnectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_baee4f6301954b8c, []int{7}
}

func (m *DisconnectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisconnectRequest.Unmarshal(m, b)
}
func (m *DisconnectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisconnectRequest.Marshal(b, m, deterministic)
}
func (m *DisconnectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisconnectRequest.Merge(m, src)
}
func (m *DisconnectRequest) XXX_Size() int {
	return xxx_messageInfo_DisconnectRequest.Size(m)
}
func (m *DisconnectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DisconnectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DisconnectRequest proto.InternalMessageInfo

func (m *DisconnectRequest) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

type DisconnectResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisconnectResponse) Reset()         { *m = DisconnectResponse{} }
func (m *DisconnectResponse) String() string { return proto.CompactTextString(m) }
func (*DisconnectResponse) ProtoMessage()    {}
func (*DisconnectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_baee4f6301954b8c, []int{8}
}

func (m *DisconnectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisconnectResponse.Unmarshal(m, b)
}
func (m *DisconnectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisconnectResponse.Marshal(b, m, deterministic)
}
func (m *DisconnectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisconnectResponse.Merge(m, src)
}
func (m *DisconnectResponse) XXX_Size() int {
	return xxx_messageInfo_DisconnectResponse.Size(m)
}
func (m *DisconnectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DisconnectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DisconnectResponse proto.InternalMessageInfo

type PublishRequest struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Event                *Event   `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublishRequest) Reset()         { *m = PublishRequest{} }
func (m *PublishRequest) String() string { return proto.CompactTextString(m) }
func (*PublishRequest) ProtoMessage()    {}
func (*PublishRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_baee4f6301954b8c, []int{9}
}

func (m *PublishRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishRequest.Unmarshal(m, b)
}
func (m *PublishRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishRequest.Marshal(b, m, deterministic)
}
func (m *PublishRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishRequest.Merge(m, src)
}
func (m *PublishRequest) XXX_Size() int {
	return xxx_messageInfo_PublishRequest.Size(m)
}
func (m *PublishRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PublishRequest proto.InternalMessageInfo

func (m *PublishRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *PublishRequest) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type PublishResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublishResponse) Reset()         { *m = PublishResponse{} }
func (m *PublishResponse) String() string { return proto.CompactTextString(m) }
func (*PublishResponse) ProtoMessage()    {}
func (*PublishResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_baee4f6301954b8c, []int{10}
}

func (m *PublishResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishResponse.Unmarshal(m, b)
}
func (m *PublishResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishResponse.Marshal(b, m, deterministic)
}
func (m *PublishResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishResponse.Merge(m, src)
}
func (m *PublishResponse) XXX_Size() int {
	return xxx_messageInfo_PublishResponse.Size(m)
}
func (m *PublishResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PublishResponse proto.InternalMessageInfo

type SubscribeRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeRequest) Reset()         { *m = SubscribeRequest{} }
func (m *SubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeRequest) ProtoMessage()    {}
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_baee4f6301954b8c, []int{11}
}

func (m *SubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeRequest.Unmarshal(m, b)
}
func (m *SubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeRequest.Marshal(b, m, deterministic)
}
func (m *SubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeRequest.Merge(m, src)
}
func (m *SubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeRequest.Size(m)
}
func (m *SubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeRequest proto.InternalMessageInfo

type SubscribeResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeResponse) Reset()         { *m = SubscribeResponse{} }
func (m *SubscribeResponse) String() string { return proto.CompactTextString(m) }
func (*SubscribeResponse) ProtoMessage()    {}
func (*SubscribeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_baee4f6301954b8c, []int{12}
}

func (m *SubscribeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeResponse.Unmarshal(m, b)
}
func (m *SubscribeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeResponse.Marshal(b, m, deterministic)
}
func (m *SubscribeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeResponse.Merge(m, src)
}
func (m *SubscribeResponse) XXX_Size() int {
	return xxx_messageInfo_SubscribeResponse.Size(m)
}
func (m *SubscribeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeResponse proto.InternalMessageInfo

type HeartbeatRequest struct {
	Header               *Header  `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HeartbeatRequest) Reset()         { *m = HeartbeatRequest{} }
func (m *HeartbeatRequest) String() string { return proto.CompactTextString(m) }
func (*HeartbeatRequest) ProtoMessage()    {}
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_baee4f6301954b8c, []int{13}
}

func (m *HeartbeatRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeartbeatRequest.Unmarshal(m, b)
}
func (m *HeartbeatRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeartbeatRequest.Marshal(b, m, deterministic)
}
func (m *HeartbeatRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeartbeatRequest.Merge(m, src)
}
func (m *HeartbeatRequest) XXX_Size() int {
	return xxx_messageInfo_HeartbeatRequest.Size(m)
}
func (m *HeartbeatRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HeartbeatRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HeartbeatRequest proto.InternalMessageInfo

func (m *HeartbeatRequest) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

type HeartbeatResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HeartbeatResponse) Reset()         { *m = HeartbeatResponse{} }
func (m *HeartbeatResponse) String() string { return proto.CompactTextString(m) }
func (*HeartbeatResponse) ProtoMessage()    {}
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_baee4f6301954b8c, []int{14}
}

func (m *HeartbeatResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeartbeatResponse.Unmarshal(m, b)
}
func (m *HeartbeatResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeartbeatResponse.Marshal(b, m, deterministic)
}
func (m *HeartbeatResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeartbeatResponse.Merge(m, src)
}
func (m *HeartbeatResponse) XXX_Size() int {
	return xxx_messageInfo_HeartbeatResponse.Size(m)
}
func (m *HeartbeatResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HeartbeatResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HeartbeatResponse proto.InternalMessageInfo

type ListRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRequest) Reset()         { *m = ListRequest{} }
func (m *ListRequest) String() string { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()    {}
func (*ListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_baee4f6301954b8c, []int{15}
}

func (m *ListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRequest.Unmarshal(m, b)
}
func (m *ListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRequest.Marshal(b, m, deterministic)
}
func (m *ListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRequest.Merge(m, src)
}
func (m *ListRequest) XXX_Size() int {
	return xxx_messageInfo_ListRequest.Size(m)
}
func (m *ListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRequest proto.InternalMessageInfo

type Channel struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DeviceId             string   `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Birth                string   `protobuf:"bytes,3,opt,name=birth,proto3" json:"birth,omitempty"`
	LastHeartbeat        string   `protobuf:"bytes,4,opt,name=last_heartbeat,json=lastHeartbeat,proto3" json:"last_heartbeat,omitempty"`
	Active               int32    `protobuf:"varint,5,opt,name=active,proto3" json:"active,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Channel) Reset()         { *m = Channel{} }
func (m *Channel) String() string { return proto.CompactTextString(m) }
func (*Channel) ProtoMessage()    {}
func (*Channel) Descriptor() ([]byte, []int) {
	return fileDescriptor_baee4f6301954b8c, []int{16}
}

func (m *Channel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Channel.Unmarshal(m, b)
}
func (m *Channel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Channel.Marshal(b, m, deterministic)
}
func (m *Channel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Channel.Merge(m, src)
}
func (m *Channel) XXX_Size() int {
	return xxx_messageInfo_Channel.Size(m)
}
func (m *Channel) XXX_DiscardUnknown() {
	xxx_messageInfo_Channel.DiscardUnknown(m)
}

var xxx_messageInfo_Channel proto.InternalMessageInfo

func (m *Channel) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Channel) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *Channel) GetBirth() string {
	if m != nil {
		return m.Birth
	}
	return ""
}

func (m *Channel) GetLastHeartbeat() string {
	if m != nil {
		return m.LastHeartbeat
	}
	return ""
}

func (m *Channel) GetActive() int32 {
	if m != nil {
		return m.Active
	}
	return 0
}

type ListResponse struct {
	Channels             []*Channel `protobuf:"bytes,1,rep,name=channels,proto3" json:"channels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListResponse) Reset()         { *m = ListResponse{} }
func (m *ListResponse) String() string { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()    {}
func (*ListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_baee4f6301954b8c, []int{17}
}

func (m *ListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListResponse.Unmarshal(m, b)
}
func (m *ListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListResponse.Marshal(b, m, deterministic)
}
func (m *ListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResponse.Merge(m, src)
}
func (m *ListResponse) XXX_Size() int {
	return xxx_messageInfo_ListResponse.Size(m)
}
func (m *ListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListResponse proto.InternalMessageInfo

func (m *ListResponse) GetChannels() []*Channel {
	if m != nil {
		return m.Channels
	}
	return nil
}

func init() {
	proto.RegisterEnum("sims.proto.ErrorCode", ErrorCode_name, ErrorCode_value)
	proto.RegisterEnum("sims.proto.EventType", EventType_name, EventType_value)
	proto.RegisterType((*ServerConfig)(nil), "sims.proto.ServerConfig")
	proto.RegisterType((*User)(nil), "sims.proto.User")
	proto.RegisterType((*Header)(nil), "sims.proto.Header")
	proto.RegisterType((*Event)(nil), "sims.proto.Event")
	proto.RegisterType((*EventsRequest)(nil), "sims.proto.EventsRequest")
	proto.RegisterType((*ConnectRequest)(nil), "sims.proto.ConnectRequest")
	proto.RegisterType((*ConnectResponse)(nil), "sims.proto.ConnectResponse")
	proto.RegisterType((*DisconnectRequest)(nil), "sims.proto.DisconnectRequest")
	proto.RegisterType((*DisconnectResponse)(nil), "sims.proto.DisconnectResponse")
	proto.RegisterType((*PublishRequest)(nil), "sims.proto.PublishRequest")
	proto.RegisterType((*PublishResponse)(nil), "sims.proto.PublishResponse")
	proto.RegisterType((*SubscribeRequest)(nil), "sims.proto.SubscribeRequest")
	proto.RegisterType((*SubscribeResponse)(nil), "sims.proto.SubscribeResponse")
	proto.RegisterType((*HeartbeatRequest)(nil), "sims.proto.HeartbeatRequest")
	proto.RegisterType((*HeartbeatResponse)(nil), "sims.proto.HeartbeatResponse")
	proto.RegisterType((*ListRequest)(nil), "sims.proto.ListRequest")
	proto.RegisterType((*Channel)(nil), "sims.proto.Channel")
	proto.RegisterType((*ListResponse)(nil), "sims.proto.ListResponse")
}

func init() { proto.RegisterFile("sims.proto", fileDescriptor_baee4f6301954b8c) }

var fileDescriptor_baee4f6301954b8c = []byte{
	// 793 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0xdb, 0x6e, 0xdb, 0x46,
	0x10, 0x0d, 0x75, 0xa1, 0xad, 0xb1, 0xac, 0xac, 0xd6, 0x89, 0xa3, 0x2a, 0x17, 0x18, 0x04, 0x8a,
	0xba, 0x7e, 0xb0, 0x0b, 0xf5, 0xa5, 0x45, 0x8b, 0x06, 0xba, 0xac, 0x2b, 0xb6, 0x0e, 0x69, 0x2c,
	0x29, 0x23, 0x2e, 0x0a, 0x10, 0xbc, 0x6c, 0x2d, 0x02, 0x8e, 0xa8, 0xee, 0x92, 0x02, 0xf2, 0x1f,
	0xfd, 0xa3, 0x7e, 0x43, 0xff, 0xa7, 0x58, 0x72, 0x25, 0x93, 0x52, 0xfc, 0xe2, 0x27, 0x72, 0xce,
	0xdc, 0xcf, 0xce, 0x0c, 0x80, 0x88, 0x3f, 0x89, 0xf3, 0x25, 0x4f, 0xd2, 0x04, 0x97, 0xfe, 0x8d,
	0x0e, 0xb4, 0x1d, 0xc6, 0x57, 0x8c, 0x8f, 0x93, 0xc5, 0x5f, 0xf1, 0x9d, 0xa1, 0x43, 0x63, 0x26,
	0x18, 0x37, 0x32, 0xd0, 0xa7, 0xcc, 0x8f, 0x18, 0xc7, 0x6f, 0x01, 0x38, 0xfb, 0x3b, 0x63, 0x22,
	0xf5, 0xe2, 0xa8, 0xa7, 0x9d, 0x68, 0xa7, 0x2d, 0xda, 0x52, 0x88, 0x19, 0xe1, 0x57, 0xb0, 0x97,
	0x09, 0xc6, 0xa5, 0xae, 0x96, 0xeb, 0x74, 0x29, 0x9a, 0x11, 0x7e, 0x0d, 0xad, 0x88, 0xad, 0xe2,
	0x90, 0x49, 0x55, 0x3d, 0x57, 0xed, 0x17, 0x80, 0x19, 0xe1, 0x63, 0xd0, 0xef, 0x78, 0x92, 0x2d,
	0x45, 0xaf, 0x71, 0x52, 0x97, 0x4e, 0x85, 0x64, 0x5c, 0x42, 0x93, 0xac, 0xd8, 0x22, 0xc5, 0xdf,
	0x42, 0x23, 0xfd, 0xbc, 0x64, 0x79, 0xbe, 0xce, 0xe0, 0xe5, 0xf9, 0x43, 0xc9, 0xe7, 0xb9, 0x81,
	0xfb, 0x79, 0xc9, 0x68, 0x6e, 0x82, 0x31, 0x34, 0x22, 0x3f, 0xf5, 0xf3, 0xf4, 0x6d, 0x9a, 0xff,
	0x1b, 0x3f, 0xc1, 0x61, 0x6e, 0x26, 0x68, 0x51, 0x28, 0x3e, 0x03, 0x7d, 0x9e, 0xf7, 0x93, 0x47,
	0x3c, 0x18, 0xe0, 0x72, 0xc4, 0xa2, 0x53, 0xaa, 0x2c, 0x8c, 0x9f, 0xa1, 0x33, 0x4e, 0x16, 0x0b,
	0x16, 0xa6, 0x4f, 0xf1, 0xee, 0xc2, 0xf3, 0x8d, 0xb7, 0x58, 0x26, 0x0b, 0xc1, 0x8c, 0xf7, 0xd0,
	0x9d, 0xc4, 0x22, 0x7c, 0x7a, 0xcc, 0x17, 0x80, 0xcb, 0x01, 0x54, 0x58, 0x0a, 0x9d, 0xeb, 0x2c,
	0xb8, 0x8f, 0xc5, 0x7c, 0x1d, 0xb3, 0xf4, 0x18, 0x5a, 0xe5, 0x31, 0xbe, 0x81, 0x26, 0x93, 0x7c,
	0xe4, 0x24, 0x1d, 0x0c, 0xba, 0x3b, 0x7c, 0xd2, 0x42, 0x2f, 0xab, 0xdf, 0xc4, 0x54, 0x69, 0x30,
	0x20, 0x27, 0x0b, 0x44, 0xc8, 0xe3, 0x80, 0xa9, 0x44, 0xc6, 0x11, 0x74, 0x4b, 0x98, 0x32, 0xfc,
	0x05, 0xd0, 0x94, 0xf9, 0x3c, 0x0d, 0x98, 0xff, 0xa4, 0x2e, 0x8f, 0xa0, 0x5b, 0xf2, 0x57, 0x41,
	0x0f, 0xe1, 0xe0, 0x2a, 0x16, 0xeb, 0x78, 0xc6, 0x3f, 0x1a, 0xec, 0x8d, 0xe7, 0xfe, 0x62, 0xc1,
	0xee, 0x1f, 0xef, 0xb6, 0x32, 0x7a, 0xb5, 0xad, 0xd1, 0x7b, 0x01, 0xcd, 0x20, 0xe6, 0xe9, 0x5c,
	0xcd, 0x64, 0x21, 0xe0, 0xaf, 0xa1, 0x73, 0xef, 0x8b, 0xd4, 0x9b, 0xaf, 0x0b, 0xe8, 0x35, 0x72,
	0xf5, 0xa1, 0x44, 0x37, 0x55, 0xc9, 0xb9, 0xf5, 0xc3, 0x34, 0x5e, 0xb1, 0x5e, 0xf3, 0x44, 0x3b,
	0x6d, 0x52, 0x25, 0x19, 0xef, 0xa1, 0x5d, 0x54, 0x59, 0x54, 0x8d, 0x2f, 0x60, 0x3f, 0x2c, 0xaa,
	0x14, 0x3d, 0xed, 0xa4, 0x7e, 0x7a, 0x30, 0x38, 0x2a, 0x37, 0xae, 0x3a, 0xa0, 0x1b, 0xa3, 0xb3,
	0x7f, 0x35, 0x68, 0x11, 0xce, 0x13, 0x3e, 0x4e, 0x22, 0x86, 0x8f, 0xe0, 0x39, 0xa1, 0xd4, 0x9b,
	0x59, 0xce, 0x35, 0x19, 0x9b, 0x97, 0x26, 0x99, 0xa0, 0x67, 0xb8, 0x0b, 0x87, 0x12, 0xb4, 0x6c,
	0xd7, 0xbb, 0xb4, 0x67, 0xd6, 0x04, 0x69, 0xf8, 0x18, 0xb0, 0x84, 0x86, 0x57, 0x94, 0x0c, 0x27,
	0xb7, 0x1e, 0xf9, 0x68, 0x3a, 0xae, 0x83, 0x6a, 0x6b, 0xfc, 0x83, 0xe9, 0x38, 0xa6, 0xf5, 0xab,
	0x37, 0x73, 0x08, 0x35, 0x27, 0xa8, 0xbe, 0x8d, 0x4f, 0xc9, 0x70, 0x42, 0x28, 0x6a, 0xac, 0xf3,
	0x59, 0xb6, 0x37, 0xb6, 0x2d, 0x67, 0xf6, 0x81, 0x50, 0xd4, 0xc4, 0x2f, 0xa1, 0x5b, 0x36, 0x26,
	0x37, 0xc4, 0x72, 0x91, 0x8e, 0xfb, 0x70, 0x2c, 0x61, 0xd3, 0xba, 0x19, 0x5e, 0x99, 0x93, 0x02,
	0xf6, 0xdc, 0xdb, 0x6b, 0x82, 0xf6, 0xce, 0xfe, 0x84, 0xd6, 0x66, 0x3b, 0xf3, 0x7a, 0x6f, 0x5c,
	0x99, 0x84, 0xba, 0x23, 0x32, 0x74, 0xd1, 0x33, 0xdc, 0x86, 0x7d, 0x09, 0xb9, 0xe4, 0xa3, 0x8b,
	0xb4, 0xb5, 0xf4, 0x9b, 0x63, 0x5b, 0xa8, 0x86, 0x11, 0xb4, 0xa5, 0x74, 0x4d, 0x6d, 0xd7, 0x1e,
	0xcd, 0x2e, 0x51, 0x1d, 0x77, 0x00, 0x24, 0x32, 0x32, 0xad, 0x21, 0xbd, 0x45, 0x8d, 0xc1, 0x7f,
	0x35, 0xa8, 0x4f, 0xb3, 0x00, 0x8f, 0x60, 0x4f, 0x6d, 0x18, 0xee, 0x57, 0x58, 0xad, 0x2c, 0x58,
	0xff, 0xf5, 0x17, 0x75, 0xea, 0x81, 0xa6, 0xd0, 0x7a, 0x78, 0xd5, 0x37, 0x5b, 0x43, 0x59, 0x19,
	0xe1, 0xfe, 0xdb, 0x47, 0xb4, 0x2a, 0xd2, 0x0f, 0xa0, 0x17, 0xa7, 0x06, 0x7f, 0xb5, 0xb3, 0x55,
	0xeb, 0xf3, 0xd3, 0xdf, 0x5d, 0xb8, 0xef, 0x34, 0xfc, 0x3b, 0xc0, 0xc3, 0x56, 0xe3, 0x4a, 0x9a,
	0x9d, 0x73, 0xd1, 0x7f, 0xf7, 0x98, 0x5a, 0x95, 0xf1, 0x23, 0x34, 0xe4, 0x04, 0xe2, 0x57, 0x65,
	0xbb, 0xd2, 0xe6, 0xf4, 0x7b, 0xbb, 0x8a, 0xc2, 0x75, 0x60, 0x43, 0x4b, 0xed, 0x3c, 0xe3, 0x92,
	0x5c, 0x25, 0x54, 0xc9, 0xad, 0x5e, 0x9a, 0x2a, 0xb9, 0x5b, 0x17, 0x63, 0x70, 0x03, 0xb0, 0xb9,
	0x0e, 0x5c, 0x52, 0xbd, 0x91, 0xaa, 0x54, 0x6f, 0x9f, 0x95, 0x2a, 0xd5, 0x3b, 0x07, 0x66, 0xf4,
	0xee, 0x8f, 0x37, 0x77, 0x71, 0x3a, 0xcf, 0x82, 0xf3, 0x30, 0xf9, 0x74, 0xe1, 0x87, 0xf7, 0xb1,
	0x58, 0x5e, 0x48, 0x8f, 0x8b, 0xdc, 0x23, 0xd0, 0xf3, 0xcf, 0xf7, 0xff, 0x07, 0x00, 0x00, 0xff,
	0xff, 0xd4, 0xde, 0x93, 0x4d, 0xed, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HubClient is the client API for Hub service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HubClient interface {
	Connect(ctx context.Context, in *ConnectRequest, opts ...grpc.CallOption) (*ConnectResponse, error)
	Heartbeat(ctx context.Context, in *HeartbeatRequest, opts ...grpc.CallOption) (*HeartbeatResponse, error)
	Events(ctx context.Context, in *EventsRequest, opts ...grpc.CallOption) (Hub_EventsClient, error)
	Disconnect(ctx context.Context, in *DisconnectRequest, opts ...grpc.CallOption) (*DisconnectResponse, error)
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error)
}

type hubClient struct {
	cc *grpc.ClientConn
}

func NewHubClient(cc *grpc.ClientConn) HubClient {
	return &hubClient{cc}
}

func (c *hubClient) Connect(ctx context.Context, in *ConnectRequest, opts ...grpc.CallOption) (*ConnectResponse, error) {
	out := new(ConnectResponse)
	err := c.cc.Invoke(ctx, "/sims.proto.Hub/Connect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hubClient) Heartbeat(ctx context.Context, in *HeartbeatRequest, opts ...grpc.CallOption) (*HeartbeatResponse, error) {
	out := new(HeartbeatResponse)
	err := c.cc.Invoke(ctx, "/sims.proto.Hub/Heartbeat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hubClient) Events(ctx context.Context, in *EventsRequest, opts ...grpc.CallOption) (Hub_EventsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Hub_serviceDesc.Streams[0], "/sims.proto.Hub/Events", opts...)
	if err != nil {
		return nil, err
	}
	x := &hubEventsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Hub_EventsClient interface {
	Recv() (*Event, error)
	grpc.ClientStream
}

type hubEventsClient struct {
	grpc.ClientStream
}

func (x *hubEventsClient) Recv() (*Event, error) {
	m := new(Event)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *hubClient) Disconnect(ctx context.Context, in *DisconnectRequest, opts ...grpc.CallOption) (*DisconnectResponse, error) {
	out := new(DisconnectResponse)
	err := c.cc.Invoke(ctx, "/sims.proto.Hub/Disconnect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hubClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := c.cc.Invoke(ctx, "/sims.proto.Hub/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HubServer is the server API for Hub service.
type HubServer interface {
	Connect(context.Context, *ConnectRequest) (*ConnectResponse, error)
	Heartbeat(context.Context, *HeartbeatRequest) (*HeartbeatResponse, error)
	Events(*EventsRequest, Hub_EventsServer) error
	Disconnect(context.Context, *DisconnectRequest) (*DisconnectResponse, error)
	List(context.Context, *ListRequest) (*ListResponse, error)
}

// UnimplementedHubServer can be embedded to have forward compatible implementations.
type UnimplementedHubServer struct {
}

func (*UnimplementedHubServer) Connect(ctx context.Context, req *ConnectRequest) (*ConnectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Connect not implemented")
}
func (*UnimplementedHubServer) Heartbeat(ctx context.Context, req *HeartbeatRequest) (*HeartbeatResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Heartbeat not implemented")
}
func (*UnimplementedHubServer) Events(req *EventsRequest, srv Hub_EventsServer) error {
	return status.Errorf(codes.Unimplemented, "method Events not implemented")
}
func (*UnimplementedHubServer) Disconnect(ctx context.Context, req *DisconnectRequest) (*DisconnectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Disconnect not implemented")
}
func (*UnimplementedHubServer) List(ctx context.Context, req *ListRequest) (*ListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}

func RegisterHubServer(s *grpc.Server, srv HubServer) {
	s.RegisterService(&_Hub_serviceDesc, srv)
}

func _Hub_Connect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HubServer).Connect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sims.proto.Hub/Connect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HubServer).Connect(ctx, req.(*ConnectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hub_Heartbeat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HeartbeatRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HubServer).Heartbeat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sims.proto.Hub/Heartbeat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HubServer).Heartbeat(ctx, req.(*HeartbeatRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hub_Events_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(EventsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(HubServer).Events(m, &hubEventsServer{stream})
}

type Hub_EventsServer interface {
	Send(*Event) error
	grpc.ServerStream
}

type hubEventsServer struct {
	grpc.ServerStream
}

func (x *hubEventsServer) Send(m *Event) error {
	return x.ServerStream.SendMsg(m)
}

func _Hub_Disconnect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisconnectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HubServer).Disconnect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sims.proto.Hub/Disconnect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HubServer).Disconnect(ctx, req.(*DisconnectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Hub_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HubServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sims.proto.Hub/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HubServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Hub_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sims.proto.Hub",
	HandlerType: (*HubServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Connect",
			Handler:    _Hub_Connect_Handler,
		},
		{
			MethodName: "Heartbeat",
			Handler:    _Hub_Heartbeat_Handler,
		},
		{
			MethodName: "Disconnect",
			Handler:    _Hub_Disconnect_Handler,
		},
		{
			MethodName: "List",
			Handler:    _Hub_List_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Events",
			Handler:       _Hub_Events_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "sims.proto",
}

// PublisherClient is the client API for Publisher service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PublisherClient interface {
	Publish(ctx context.Context, in *PublishRequest, opts ...grpc.CallOption) (*PublishResponse, error)
}

type publisherClient struct {
	cc *grpc.ClientConn
}

func NewPublisherClient(cc *grpc.ClientConn) PublisherClient {
	return &publisherClient{cc}
}

func (c *publisherClient) Publish(ctx context.Context, in *PublishRequest, opts ...grpc.CallOption) (*PublishResponse, error) {
	out := new(PublishResponse)
	err := c.cc.Invoke(ctx, "/sims.proto.Publisher/Publish", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PublisherServer is the server API for Publisher service.
type PublisherServer interface {
	Publish(context.Context, *PublishRequest) (*PublishResponse, error)
}

// UnimplementedPublisherServer can be embedded to have forward compatible implementations.
type UnimplementedPublisherServer struct {
}

func (*UnimplementedPublisherServer) Publish(ctx context.Context, req *PublishRequest) (*PublishResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Publish not implemented")
}

func RegisterPublisherServer(s *grpc.Server, srv PublisherServer) {
	s.RegisterService(&_Publisher_serviceDesc, srv)
}

func _Publisher_Publish_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PublishRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublisherServer).Publish(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sims.proto.Publisher/Publish",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublisherServer).Publish(ctx, req.(*PublishRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Publisher_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sims.proto.Publisher",
	HandlerType: (*PublisherServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Publish",
			Handler:    _Publisher_Publish_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sims.proto",
}

// SubscriberClient is the client API for Subscriber service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SubscriberClient interface {
	Subscribe(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (*SubscribeResponse, error)
}

type subscriberClient struct {
	cc *grpc.ClientConn
}

func NewSubscriberClient(cc *grpc.ClientConn) SubscriberClient {
	return &subscriberClient{cc}
}

func (c *subscriberClient) Subscribe(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (*SubscribeResponse, error) {
	out := new(SubscribeResponse)
	err := c.cc.Invoke(ctx, "/sims.proto.Subscriber/Subscribe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SubscriberServer is the server API for Subscriber service.
type SubscriberServer interface {
	Subscribe(context.Context, *SubscribeRequest) (*SubscribeResponse, error)
}

// UnimplementedSubscriberServer can be embedded to have forward compatible implementations.
type UnimplementedSubscriberServer struct {
}

func (*UnimplementedSubscriberServer) Subscribe(ctx context.Context, req *SubscribeRequest) (*SubscribeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Subscribe not implemented")
}

func RegisterSubscriberServer(s *grpc.Server, srv SubscriberServer) {
	s.RegisterService(&_Subscriber_serviceDesc, srv)
}

func _Subscriber_Subscribe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubscribeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SubscriberServer).Subscribe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sims.proto.Subscriber/Subscribe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SubscriberServer).Subscribe(ctx, req.(*SubscribeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Subscriber_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sims.proto.Subscriber",
	HandlerType: (*SubscriberServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Subscribe",
			Handler:    _Subscriber_Subscribe_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sims.proto",
}
